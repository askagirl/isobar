exports.ids = [0];
exports.modules = {

/***/ "./dist/nano_wasm.js":
/*!***************************!*\
  !*** ./dist/nano_wasm.js ***!
  \***************************/
/*! exports provided: Server, __wbindgen_object_drop_ref, __wbindgen_json_parse, __wbindgen_json_serialize, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Server\", function() { return Server; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_parse\", function() { return __wbindgen_json_parse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_serialize\", function() { return __wbindgen_json_serialize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _nano_wasm_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nano_wasm_bg */ \"./dist/nano_wasm_bg.wasm\");\n/* tslint:disable */\n\n\nconst slab = [{ obj: undefined }, { obj: null }, { obj: true }, { obj: false }];\n\nlet slab_next = slab.length;\n\nfunction addHeapObject(obj) {\n    if (slab_next === slab.length) slab.push(slab.length + 1);\n    const idx = slab_next;\n    const next = slab[idx];\n    \n    slab_next = next;\n    \n    slab[idx] = { obj, cnt: 1 };\n    return idx << 1;\n}\n\nconst stack = [];\n\nfunction getObject(idx) {\n    if ((idx & 1) === 1) {\n        return stack[idx >> 1];\n    } else {\n        const val = slab[idx >> 1];\n        \n        return val.obj;\n        \n    }\n}\n\nfunction dropRef(idx) {\n    \n    idx = idx >> 1;\n    if (idx < 4) return;\n    let obj = slab[idx];\n    \n    obj.cnt -= 1;\n    if (obj.cnt > 0) return;\n    \n    // If we hit 0 then free up our space in the slab\n    slab[idx] = slab_next;\n    slab_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropRef(idx);\n    return ret;\n}\n\nfunction freeServer(ptr) {\n    \n    _nano_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_server_free\"](ptr);\n}\n/**\n*/\nclass Server {\n    \n    static __construct(ptr) {\n        return new Server(ptr);\n    }\n    \n    constructor(ptr) {\n        this.ptr = ptr;\n        \n    }\n    \n    free() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n        freeServer(ptr);\n    }\n    /**\n    * @returns {Server}\n    */\n    static new() {\n        return Server.__construct(_nano_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"server_new\"]());\n    }\n    /**\n    * @param {any} arg0\n    * @returns {any}\n    */\n    request(arg0) {\n        if (this.ptr === 0) {\n            throw new Error('Attempt to use a moved value');\n        }\n        return takeObject(_nano_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"server_request\"](this.ptr, addHeapObject(arg0)));\n    }\n}\n\nfunction __wbindgen_object_drop_ref(i) {\n    dropRef(i);\n}\n\nconst TextDecoder = typeof self === 'object' && self.TextDecoder\n    ? self.TextDecoder\n    : __webpack_require__(/*! util */ \"util\").TextDecoder;\n\nlet cachedDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== _nano_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint8Memory = new Uint8Array(_nano_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nfunction __wbindgen_json_parse(ptr, len) {\n    return addHeapObject(JSON.parse(getStringFromWasm(ptr, len)));\n}\n\nconst TextEncoder = typeof self === 'object' && self.TextEncoder\n    ? self.TextEncoder\n    : __webpack_require__(/*! util */ \"util\").TextEncoder;\n\nlet cachedEncoder = new TextEncoder('utf-8');\n\nfunction passStringToWasm(arg) {\n    \n    const buf = cachedEncoder.encode(arg);\n    const ptr = _nano_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](buf.length);\n    getUint8Memory().set(buf, ptr);\n    return [ptr, buf.length];\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null || cachegetUint32Memory.buffer !== _nano_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer) {\n        cachegetUint32Memory = new Uint32Array(_nano_wasm_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachegetUint32Memory;\n}\n\nfunction __wbindgen_json_serialize(idx, ptrptr) {\n    const [ptr, len] = passStringToWasm(JSON.stringify(getObject(idx)));\n    getUint32Memory()[ptrptr / 4] = ptr;\n    return len;\n}\n\nfunction __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n\n\n//# sourceURL=webpack://nano/./dist/nano_wasm.js?");

/***/ }),

/***/ "./dist/nano_wasm_bg.wasm":
/*!********************************!*\
  !*** ./dist/nano_wasm_bg.wasm ***!
  \********************************/
/*! exports provided: memory, __indirect_function_table, __heap_base, __data_end, __wbindgen_malloc, __wbg_server_free, server_new, server_request */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n\n// Instantiate WebAssembly module\nvar instance = new WebAssembly.Instance(__webpack_require__.w[module.i], {\n\t\"./nano_wasm\": {\n\t\t\"__wbindgen_throw\": __webpack_require__(\"./dist/nano_wasm.js\")[\"__wbindgen_throw\"],\n\t\t\"__wbindgen_json_serialize\": __webpack_require__(\"./dist/nano_wasm.js\")[\"__wbindgen_json_serialize\"],\n\t\t\"__wbindgen_json_parse\": __webpack_require__(\"./dist/nano_wasm.js\")[\"__wbindgen_json_parse\"],\n\t\t\"__wbindgen_object_drop_ref\": __webpack_require__(\"./dist/nano_wasm.js\")[\"__wbindgen_object_drop_ref\"]\n\t}\n});\n\n// export exports from WebAssembly module\nmodule.exports = instance.exports;\n\n//# sourceURL=webpack://nano/./dist/nano_wasm_bg.wasm?");

/***/ })

};;